name: "Deploy release"

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch:

concurrency:
  group: release-deploy-{{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  release-perform:
    name: Deploy release
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: 0.4.0

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create git user and release branch
        shell: bash
        run: |
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@users.noreply.github.com
          git branch release/v${{ env.RELEASE_VERSION }}
          git checkout release/v${{ env.RELEASE_VERSION }}

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Install GPG ownertrust
        run: |
          echo ${{ secrets.GPG_TRUSTVALUES }} > trustvalues.txt
          gpg --import-ownertrust trustvalues.txt
          echo "<setting><servers><server><id>ossrh</id><username>\${env.MAVEN_USERNAME}</username><password>\${env.MAVEN_PASSWORD}</password></server><server><id>gpg.passphrase</id><password>${{ secrets.GPG_PASSPHRASE }}</password></server></servers></settings>" > ~/.m2/settings.xml
          echo "<settingsSecurity><master>${{ secrets.GPG_PASSPHRASE }}</master></settingsSecurity>" > ~/.m2/settings-security.xml
          echo ---
          cat ~/.m2/settings.xml
          echo ---
          cat ~/.m2/settings-security.xml
      

      - name: Perform Maven release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          mvn -B -U -ntp release:prepare -DreleaseVersion=${{ env.RELEASE_VERSION }} -P release
          mvn -B -U -ntp release:perform -DreleaseVersion=${{ env.RELEASE_VERSION }} -P release 

      - name: Create and merge pull request
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_url=$(gh pr create --title "PR from release/v${{ env.RELEASE_VERSION }} to main" --body "PR from release/v${{ env.RELEASE_VERSION }} to main" --base main --head release/v${{ env.RELEASE_VERSION }})
          number=${pr_url##*/}
          echo PR number: $number
          gh pr merge $number --admin --delete-branch --rebase

      - name: Move the tag to main b ranch
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag -d v${{ env.RELEASE_VERSION }}
          git push origin :refs/tags/v${{ env.RELEASE_VERSION }}
          hash=$(git log origin/main --grep="prepare release v${{ env.RELEASE_VERSION }}" | grep -oE '[a-f0-9]{40}')
          echo commit hash: $hash
          git tag v${{ env.RELEASE_VERSION }} $hash
          git push origin v${{ env.RELEASE_VERSION }} 

      - name: Create GH release
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ env.RELEASE_VERSION }} target/auto-record-${{ env.RELEASE_VERSION }}.jar --generate-notes --verify-tag
